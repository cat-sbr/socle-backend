## default connection pool
spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=5

## PostgreSQL
spring.datasource.url=jdbc:postgresql://localhost:5432/test_db
spring.datasource.username=postgres
spring.datasource.password=postgres

# Defines whether the persistence provider shall create the database, first drop, and then recreate it, only drop it or do nothing at all.
# If this property is not provided, no schema will be created.
# create|drop-and-create|drop|none
javax.persistence.schema-generation.database.action=none

# Defines which scripts the persistence provider shall create.
# A script target needs to be defined for each script to be created.
# none|create|drop-and-create|drop
spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create

# Defines how the schema shall be created. It can be done based on the mapping metadata, a script, or a combination of both.
# If this parameter is not provided, the persistence provider will use only the mapping metadata,
# or a script if the javax.persistence.schema-generation.create-script-source property is defined.
# metadata|script|metadata-then-script|script-then-metadata
spring.jpa.properties.javax.persistence.schema-generation.create-source=metadata

# Defines how the schema shall be dropped. It can be done based on the mapping metadata, a script or a combination of both.
# If this parameter is not provided, the persistence provider will use only the mapping metadata,
#  or a script if the javax.persistence.schema-generation.drop-script-source property is defined.
# metadata|script|metadata-then-script|script-then-metadata
spring.jpa.properties.javax.persistence.schema-generation.drop-source=metadata

# Defines if the persistence provider shall also create the required database schemas or only the other database objects like tables, sequences, etc..
# This property defaults to false.
# true|false
spring.jpa.properties.javax.persistence.schema-generation.create-database-schemas=false

# Defines the target location of the create script generated by the persistence provider
# file URL|java.IO.Writer
spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=create.sql

# javax.persistence.schema-generation.scripts.drop-target
# ... cf https://thorben-janssen.com/standardized-schema-generation-data-loading-jpa-2-1/
# javax.persistence.sql-load-script-source

# Affichage des requÃªtes SQL :
# While this is extremely simple, it's not recommended, as it directly unloads everything to standard output without any optimizations of a logging framework.
#Moreover, it doesn't log the parameters of prepared statements.
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true